    - name: Cluster user init
      tags: cluster
      user: 
        name: hacluster
        password: "{{ hacluster_password_crypt }}"
    - name: PCS Services
      service:
        name: pcsd
        state: started
        enabled: yes
    - name: PCS Cluster Init On Nodes
      tags: cluster
      shell: pcs cluster setup --start --local --name {{ pgClusterName }} {{ cluster_fqdns }}
    - name: PCS Cluster Init base config
      tags: cluster
      shell: "{{ item }}"
      with_items:
        - pcs property set no-quorum-policy="{{quorum_policy}}"
        - pcs property set stonith-enabled="false"
        - pcs resource defaults resource-stickiness="INFINITY"
        - pcs resource defaults migration-threshold="1"
        - pcs cluster auth {{ cluster_fqdns }}  -u hacluster -p {{ hacluster_password }}
        # -f groups things together for...
        - pcs resource create {{pgClusterName}}-vip ocf:heartbeat:IPaddr2 ip={{ pgvip }} cidr_netmask=24 \
          op start   timeout="60s" interval="0s"  on-fail="restart" \
          op monitor timeout="60s" interval="10s" on-fail="restart" \
          op stop    timeout="60s" interval="0s"  on-fail="block" 
        - pcs resource create pgsql pgsql pgctl=/usr/local/bin/pg_ctl pgdata=/var/opt/rh/rh-postgresql94/lib/pgsql/data 
          psql=/usr/local/bin/psql config=/var/opt/rh/rh-postgresql94/lib/pgsql/data/postgresql.conf rep_mode=async \
          repuser=replicator primary_conninfo_opt="password={{ replicator_password }}" node_list="{{ cluster_fqdns }}" \
          restore_command='cp /var/opt/rh/rh-postgresql94/lib/pgsql/wal-archive/{{pgClusterName}}/%f "%p"' \
          master_ip={{ pgvip }} tmpdir=/var/opt/rh/rh-postgresql94/lib/pgsql/data/tmp \
          check_wal_receiver=true restart_on_promote=true \
          op start timeout="60s" interval="0s" on-fail="restart" \
          op monitor timeout="60s" interval="4s" on-fail="restart" \
          op monitor timeout="60s" interval="3s" on-fail="restart" role="Master" \
          op promote timeout="60s" interval="0s" on-fail="restart" \
          op demote timeout="60s" interval="0s" on-fail="stop" \  
          op stop timeout="60s" interval="0s" \
          op notify timeout="60s" interval="0s" 
        - pcs resource master msPostgresql pgsql master-max=1 master-node-max=1 clone-max={{ cluster_size }} clone-node-max=1 notify=true
#        - pcs resource group add master-group {{pgClusterName}}-vip vip-rep
        - pcs constraint colocation add {{pgClusterName}}-vip with Master msPostgresql INFINITY
        - pcs constraint order promote msPostgresql then start {{pgClusterName}}-vip symmetrical=false score=INFINITY
        - pcs constraint order demote  msPostgresql then stop  {{pgClusterName}}-vip symmetrical=false score=0
      when: ansible_hostname == cluster_master 
    - name: PCS Services
      service:
        name: "{{ item }}"
        state: started
        enabled: yes
      with_items:
        - corosync.service
        - pacemaker.service